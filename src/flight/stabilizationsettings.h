/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup StabilizationSettings StabilizationSettings 
 * @brief PID settings used by the Stabilization module to combine the @ref AttitudeActual and @ref AttitudeDesired to compute @ref ActuatorDesired
 *
 * Autogenerated files and functions for StabilizationSettings Object
 *
 * @{ 
 *
 * @file       stabilizationsettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 * @brief      Implementation of the StabilizationSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: stabilizationsettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef STABILIZATIONSETTINGS_H
#define STABILIZATIONSETTINGS_H

/* Object constants */
#define STABILIZATIONSETTINGS_OBJID 0x73603180
#define STABILIZATIONSETTINGS_ISSINGLEINST 1
#define STABILIZATIONSETTINGS_ISSETTINGS 1
#define STABILIZATIONSETTINGS_ISPRIORITY 0
#define STABILIZATIONSETTINGS_NUMBYTES sizeof(StabilizationSettingsData)

/* Generic interface functions */
int32_t StabilizationSettingsInitialize();
UAVObjHandle StabilizationSettingsHandle();
void StabilizationSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

typedef struct __attribute__ ((__packed__)) {
    float Roll;
    float Pitch;
    float Yaw;
}  StabilizationSettingsVbarSensitivityData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  StabilizationSettingsVbarSensitivityDataArray ;
#define StabilizationSettingsVbarSensitivityToArray( var ) UAVObjectFieldToArray( StabilizationSettingsVbarSensitivityData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
}  StabilizationSettingsVbarRollPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StabilizationSettingsVbarRollPIDataArray ;
#define StabilizationSettingsVbarRollPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsVbarRollPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
}  StabilizationSettingsVbarPitchPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StabilizationSettingsVbarPitchPIDataArray ;
#define StabilizationSettingsVbarPitchPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsVbarPitchPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
}  StabilizationSettingsVbarYawPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StabilizationSettingsVbarYawPIDataArray ;
#define StabilizationSettingsVbarYawPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsVbarYawPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Min;
    float Max;
}  StabilizationSettingsScaleToAirspeedLimitsData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StabilizationSettingsScaleToAirspeedLimitsDataArray ;
#define StabilizationSettingsScaleToAirspeedLimitsToArray( var ) UAVObjectFieldToArray( StabilizationSettingsScaleToAirspeedLimitsData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    StabilizationSettingsVbarSensitivityData VbarSensitivity;
    StabilizationSettingsVbarRollPIData VbarRollPI;
    StabilizationSettingsVbarPitchPIData VbarPitchPI;
    StabilizationSettingsVbarYawPIData VbarYawPI;
    float VbarTau;
    float GyroTau;
    float DerivativeGamma;
    float AxisLockKp;
    float WeakLevelingKp;
    float CruiseControlMaxPowerFactor;
    float CruiseControlPowerTrim;
    float CruiseControlPowerDelayComp;
    float ScaleToAirspeed;
    StabilizationSettingsScaleToAirspeedLimitsData ScaleToAirspeedLimits;
    uint8_t FlightModeMap[6];
    int8_t VbarGyroSuppress;
    uint8_t VbarPiroComp;
    uint8_t VbarMaxAngle;
    uint8_t DerivativeCutoff;
    uint8_t MaxAxisLock;
    uint8_t MaxAxisLockRate;
    uint8_t MaxWeakLevelingRate;
    uint8_t RattitudeModeTransition;
    int8_t CruiseControlMinThrust;
    uint8_t CruiseControlMaxThrust;
    uint8_t CruiseControlMaxAngle;
    uint8_t CruiseControlFlightModeSwitchPosEnable[6];
    uint8_t CruiseControlInvertedThrustReversing;
    uint8_t CruiseControlInvertedPowerOutput;
    uint8_t LowThrottleZeroIntegral;
    uint8_t FlightModeAssistMap[6];
} __attribute__((packed)) StabilizationSettingsDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes so as to avoid the potential for CPU usage faults
 * on Cortex M4F during load/store of float UAVO fields
 */
typedef StabilizationSettingsDataPacked __attribute__((aligned(4))) StabilizationSettingsData;
    
/* Typesafe Object access functions */
static inline int32_t StabilizationSettingsGet(StabilizationSettingsData *dataOut) { return UAVObjGetData(StabilizationSettingsHandle(), dataOut); }
static inline int32_t StabilizationSettingsSet(const StabilizationSettingsData *dataIn) { return UAVObjSetData(StabilizationSettingsHandle(), dataIn); }
static inline int32_t StabilizationSettingsInstGet(uint16_t instId, StabilizationSettingsData *dataOut) { return UAVObjGetInstanceData(StabilizationSettingsHandle(), instId, dataOut); }
static inline int32_t StabilizationSettingsInstSet(uint16_t instId, const StabilizationSettingsData *dataIn) { return UAVObjSetInstanceData(StabilizationSettingsHandle(), instId, dataIn); }
static inline int32_t StabilizationSettingsConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(StabilizationSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }
static inline int32_t StabilizationSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(StabilizationSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }
static inline uint16_t StabilizationSettingsCreateInstance() { return UAVObjCreateInstance(StabilizationSettingsHandle(), &StabilizationSettingsSetDefaults); }
static inline void StabilizationSettingsRequestUpdate() { UAVObjRequestUpdate(StabilizationSettingsHandle()); }
static inline void StabilizationSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(StabilizationSettingsHandle(), instId); }
static inline void StabilizationSettingsUpdated() { UAVObjUpdated(StabilizationSettingsHandle()); }
static inline void StabilizationSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(StabilizationSettingsHandle(), instId); }
static inline void StabilizationSettingsLogging() { UAVObjLogging(StabilizationSettingsHandle()); }
static inline void StabilizationSettingsInstLogging(uint16_t instId) { UAVObjInstanceLogging(StabilizationSettingsHandle(), instId); }
static inline int32_t StabilizationSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(StabilizationSettingsHandle(), dataOut); }
static inline int32_t StabilizationSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(StabilizationSettingsHandle(), dataIn); }
static inline int8_t StabilizationSettingsReadOnly() { return UAVObjReadOnly(StabilizationSettingsHandle()); }

/* Field VbarSensitivity information */

// Array element names for field VbarSensitivity
typedef enum {
    STABILIZATIONSETTINGS_VBARSENSITIVITY_ROLL=0,
    STABILIZATIONSETTINGS_VBARSENSITIVITY_PITCH=1,
    STABILIZATIONSETTINGS_VBARSENSITIVITY_YAW=2
} StabilizationSettingsVbarSensitivityElem;

// Number of elements for field VbarSensitivity
#define STABILIZATIONSETTINGS_VBARSENSITIVITY_NUMELEM 3

/* Field VbarRollPI information */

// Array element names for field VbarRollPI
typedef enum {
    STABILIZATIONSETTINGS_VBARROLLPI_KP=0,
    STABILIZATIONSETTINGS_VBARROLLPI_KI=1
} StabilizationSettingsVbarRollPIElem;

// Number of elements for field VbarRollPI
#define STABILIZATIONSETTINGS_VBARROLLPI_NUMELEM 2

/* Field VbarPitchPI information */

// Array element names for field VbarPitchPI
typedef enum {
    STABILIZATIONSETTINGS_VBARPITCHPI_KP=0,
    STABILIZATIONSETTINGS_VBARPITCHPI_KI=1
} StabilizationSettingsVbarPitchPIElem;

// Number of elements for field VbarPitchPI
#define STABILIZATIONSETTINGS_VBARPITCHPI_NUMELEM 2

/* Field VbarYawPI information */

// Array element names for field VbarYawPI
typedef enum {
    STABILIZATIONSETTINGS_VBARYAWPI_KP=0,
    STABILIZATIONSETTINGS_VBARYAWPI_KI=1
} StabilizationSettingsVbarYawPIElem;

// Number of elements for field VbarYawPI
#define STABILIZATIONSETTINGS_VBARYAWPI_NUMELEM 2

/* Field VbarTau information */

/* Field GyroTau information */

/* Field DerivativeGamma information */

/* Field AxisLockKp information */

/* Field WeakLevelingKp information */

/* Field CruiseControlMaxPowerFactor information */

/* Field CruiseControlPowerTrim information */

/* Field CruiseControlPowerDelayComp information */

/* Field ScaleToAirspeed information */

/* Field ScaleToAirspeedLimits information */

// Array element names for field ScaleToAirspeedLimits
typedef enum {
    STABILIZATIONSETTINGS_SCALETOAIRSPEEDLIMITS_MIN=0,
    STABILIZATIONSETTINGS_SCALETOAIRSPEEDLIMITS_MAX=1
} StabilizationSettingsScaleToAirspeedLimitsElem;

// Number of elements for field ScaleToAirspeedLimits
#define STABILIZATIONSETTINGS_SCALETOAIRSPEEDLIMITS_NUMELEM 2

/* Field FlightModeMap information */

// Enumeration options for field FlightModeMap
typedef enum {
    STABILIZATIONSETTINGS_FLIGHTMODEMAP_BANK1=0,
    STABILIZATIONSETTINGS_FLIGHTMODEMAP_BANK2=1,
    STABILIZATIONSETTINGS_FLIGHTMODEMAP_BANK3=2
} StabilizationSettingsFlightModeMapOptions;

// Number of elements for field FlightModeMap
#define STABILIZATIONSETTINGS_FLIGHTMODEMAP_NUMELEM 6

/* Field VbarGyroSuppress information */

/* Field VbarPiroComp information */

// Enumeration options for field VbarPiroComp
typedef enum {
    STABILIZATIONSETTINGS_VBARPIROCOMP_FALSE=0,
    STABILIZATIONSETTINGS_VBARPIROCOMP_TRUE=1
} StabilizationSettingsVbarPiroCompOptions;

/* Field VbarMaxAngle information */

/* Field DerivativeCutoff information */

/* Field MaxAxisLock information */

/* Field MaxAxisLockRate information */

/* Field MaxWeakLevelingRate information */

/* Field RattitudeModeTransition information */

/* Field CruiseControlMinThrust information */

/* Field CruiseControlMaxThrust information */

/* Field CruiseControlMaxAngle information */

/* Field CruiseControlFlightModeSwitchPosEnable information */

// Enumeration options for field CruiseControlFlightModeSwitchPosEnable
typedef enum {
    STABILIZATIONSETTINGS_CRUISECONTROLFLIGHTMODESWITCHPOSENABLE_FALSE=0,
    STABILIZATIONSETTINGS_CRUISECONTROLFLIGHTMODESWITCHPOSENABLE_TRUE=1
} StabilizationSettingsCruiseControlFlightModeSwitchPosEnableOptions;

// Number of elements for field CruiseControlFlightModeSwitchPosEnable
#define STABILIZATIONSETTINGS_CRUISECONTROLFLIGHTMODESWITCHPOSENABLE_NUMELEM 6

/* Field CruiseControlInvertedThrustReversing information */

// Enumeration options for field CruiseControlInvertedThrustReversing
typedef enum {
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDTHRUSTREVERSING_UNREVERSED=0,
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDTHRUSTREVERSING_REVERSED=1
} StabilizationSettingsCruiseControlInvertedThrustReversingOptions;

/* Field CruiseControlInvertedPowerOutput information */

// Enumeration options for field CruiseControlInvertedPowerOutput
typedef enum {
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDPOWEROUTPUT_ZERO=0,
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDPOWEROUTPUT_NORMAL=1,
    STABILIZATIONSETTINGS_CRUISECONTROLINVERTEDPOWEROUTPUT_BOOSTED=2
} StabilizationSettingsCruiseControlInvertedPowerOutputOptions;

/* Field LowThrottleZeroIntegral information */

// Enumeration options for field LowThrottleZeroIntegral
typedef enum {
    STABILIZATIONSETTINGS_LOWTHROTTLEZEROINTEGRAL_FALSE=0,
    STABILIZATIONSETTINGS_LOWTHROTTLEZEROINTEGRAL_TRUE=1
} StabilizationSettingsLowThrottleZeroIntegralOptions;

/* Field FlightModeAssistMap information */

// Enumeration options for field FlightModeAssistMap
typedef enum {
    STABILIZATIONSETTINGS_FLIGHTMODEASSISTMAP_NONE=0,
    STABILIZATIONSETTINGS_FLIGHTMODEASSISTMAP_GPSASSIST=1
} StabilizationSettingsFlightModeAssistMapOptions;

// Number of elements for field FlightModeAssistMap
#define STABILIZATIONSETTINGS_FLIGHTMODEASSISTMAP_NUMELEM 6



/* Set/Get functions */
extern void StabilizationSettingsVbarSensitivitySet(StabilizationSettingsVbarSensitivityData *NewVbarSensitivity);
extern void StabilizationSettingsVbarSensitivityGet(StabilizationSettingsVbarSensitivityData *NewVbarSensitivity);
extern void StabilizationSettingsVbarSensitivityArraySet(float *NewVbarSensitivity);
extern void StabilizationSettingsVbarSensitivityArrayGet(float *NewVbarSensitivity);
extern void StabilizationSettingsVbarRollPISet(StabilizationSettingsVbarRollPIData *NewVbarRollPI);
extern void StabilizationSettingsVbarRollPIGet(StabilizationSettingsVbarRollPIData *NewVbarRollPI);
extern void StabilizationSettingsVbarRollPIArraySet(float *NewVbarRollPI);
extern void StabilizationSettingsVbarRollPIArrayGet(float *NewVbarRollPI);
extern void StabilizationSettingsVbarPitchPISet(StabilizationSettingsVbarPitchPIData *NewVbarPitchPI);
extern void StabilizationSettingsVbarPitchPIGet(StabilizationSettingsVbarPitchPIData *NewVbarPitchPI);
extern void StabilizationSettingsVbarPitchPIArraySet(float *NewVbarPitchPI);
extern void StabilizationSettingsVbarPitchPIArrayGet(float *NewVbarPitchPI);
extern void StabilizationSettingsVbarYawPISet(StabilizationSettingsVbarYawPIData *NewVbarYawPI);
extern void StabilizationSettingsVbarYawPIGet(StabilizationSettingsVbarYawPIData *NewVbarYawPI);
extern void StabilizationSettingsVbarYawPIArraySet(float *NewVbarYawPI);
extern void StabilizationSettingsVbarYawPIArrayGet(float *NewVbarYawPI);
extern void StabilizationSettingsVbarTauSet(float *NewVbarTau);
extern void StabilizationSettingsVbarTauGet(float *NewVbarTau);
extern void StabilizationSettingsGyroTauSet(float *NewGyroTau);
extern void StabilizationSettingsGyroTauGet(float *NewGyroTau);
extern void StabilizationSettingsDerivativeGammaSet(float *NewDerivativeGamma);
extern void StabilizationSettingsDerivativeGammaGet(float *NewDerivativeGamma);
extern void StabilizationSettingsAxisLockKpSet(float *NewAxisLockKp);
extern void StabilizationSettingsAxisLockKpGet(float *NewAxisLockKp);
extern void StabilizationSettingsWeakLevelingKpSet(float *NewWeakLevelingKp);
extern void StabilizationSettingsWeakLevelingKpGet(float *NewWeakLevelingKp);
extern void StabilizationSettingsCruiseControlMaxPowerFactorSet(float *NewCruiseControlMaxPowerFactor);
extern void StabilizationSettingsCruiseControlMaxPowerFactorGet(float *NewCruiseControlMaxPowerFactor);
extern void StabilizationSettingsCruiseControlPowerTrimSet(float *NewCruiseControlPowerTrim);
extern void StabilizationSettingsCruiseControlPowerTrimGet(float *NewCruiseControlPowerTrim);
extern void StabilizationSettingsCruiseControlPowerDelayCompSet(float *NewCruiseControlPowerDelayComp);
extern void StabilizationSettingsCruiseControlPowerDelayCompGet(float *NewCruiseControlPowerDelayComp);
extern void StabilizationSettingsScaleToAirspeedSet(float *NewScaleToAirspeed);
extern void StabilizationSettingsScaleToAirspeedGet(float *NewScaleToAirspeed);
extern void StabilizationSettingsScaleToAirspeedLimitsSet(StabilizationSettingsScaleToAirspeedLimitsData *NewScaleToAirspeedLimits);
extern void StabilizationSettingsScaleToAirspeedLimitsGet(StabilizationSettingsScaleToAirspeedLimitsData *NewScaleToAirspeedLimits);
extern void StabilizationSettingsScaleToAirspeedLimitsArraySet(float *NewScaleToAirspeedLimits);
extern void StabilizationSettingsScaleToAirspeedLimitsArrayGet(float *NewScaleToAirspeedLimits);
extern void StabilizationSettingsFlightModeMapSet(uint8_t *NewFlightModeMap);
extern void StabilizationSettingsFlightModeMapGet(uint8_t *NewFlightModeMap);
extern void StabilizationSettingsVbarGyroSuppressSet(int8_t *NewVbarGyroSuppress);
extern void StabilizationSettingsVbarGyroSuppressGet(int8_t *NewVbarGyroSuppress);
extern void StabilizationSettingsVbarPiroCompSet(uint8_t *NewVbarPiroComp);
extern void StabilizationSettingsVbarPiroCompGet(uint8_t *NewVbarPiroComp);
extern void StabilizationSettingsVbarMaxAngleSet(uint8_t *NewVbarMaxAngle);
extern void StabilizationSettingsVbarMaxAngleGet(uint8_t *NewVbarMaxAngle);
extern void StabilizationSettingsDerivativeCutoffSet(uint8_t *NewDerivativeCutoff);
extern void StabilizationSettingsDerivativeCutoffGet(uint8_t *NewDerivativeCutoff);
extern void StabilizationSettingsMaxAxisLockSet(uint8_t *NewMaxAxisLock);
extern void StabilizationSettingsMaxAxisLockGet(uint8_t *NewMaxAxisLock);
extern void StabilizationSettingsMaxAxisLockRateSet(uint8_t *NewMaxAxisLockRate);
extern void StabilizationSettingsMaxAxisLockRateGet(uint8_t *NewMaxAxisLockRate);
extern void StabilizationSettingsMaxWeakLevelingRateSet(uint8_t *NewMaxWeakLevelingRate);
extern void StabilizationSettingsMaxWeakLevelingRateGet(uint8_t *NewMaxWeakLevelingRate);
extern void StabilizationSettingsRattitudeModeTransitionSet(uint8_t *NewRattitudeModeTransition);
extern void StabilizationSettingsRattitudeModeTransitionGet(uint8_t *NewRattitudeModeTransition);
extern void StabilizationSettingsCruiseControlMinThrustSet(int8_t *NewCruiseControlMinThrust);
extern void StabilizationSettingsCruiseControlMinThrustGet(int8_t *NewCruiseControlMinThrust);
extern void StabilizationSettingsCruiseControlMaxThrustSet(uint8_t *NewCruiseControlMaxThrust);
extern void StabilizationSettingsCruiseControlMaxThrustGet(uint8_t *NewCruiseControlMaxThrust);
extern void StabilizationSettingsCruiseControlMaxAngleSet(uint8_t *NewCruiseControlMaxAngle);
extern void StabilizationSettingsCruiseControlMaxAngleGet(uint8_t *NewCruiseControlMaxAngle);
extern void StabilizationSettingsCruiseControlFlightModeSwitchPosEnableSet(uint8_t *NewCruiseControlFlightModeSwitchPosEnable);
extern void StabilizationSettingsCruiseControlFlightModeSwitchPosEnableGet(uint8_t *NewCruiseControlFlightModeSwitchPosEnable);
extern void StabilizationSettingsCruiseControlInvertedThrustReversingSet(uint8_t *NewCruiseControlInvertedThrustReversing);
extern void StabilizationSettingsCruiseControlInvertedThrustReversingGet(uint8_t *NewCruiseControlInvertedThrustReversing);
extern void StabilizationSettingsCruiseControlInvertedPowerOutputSet(uint8_t *NewCruiseControlInvertedPowerOutput);
extern void StabilizationSettingsCruiseControlInvertedPowerOutputGet(uint8_t *NewCruiseControlInvertedPowerOutput);
extern void StabilizationSettingsLowThrottleZeroIntegralSet(uint8_t *NewLowThrottleZeroIntegral);
extern void StabilizationSettingsLowThrottleZeroIntegralGet(uint8_t *NewLowThrottleZeroIntegral);
extern void StabilizationSettingsFlightModeAssistMapSet(uint8_t *NewFlightModeAssistMap);
extern void StabilizationSettingsFlightModeAssistMapGet(uint8_t *NewFlightModeAssistMap);


#endif // STABILIZATIONSETTINGS_H

/**
 * @}
 * @}
 */
