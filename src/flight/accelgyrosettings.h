/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup AccelGyroSettings AccelGyroSettings 
 * @brief Settings for Accelerometer and Gyroscope calibration 
 *
 * Autogenerated files and functions for AccelGyroSettings Object
 *
 * @{ 
 *
 * @file       accelgyrosettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 * @brief      Implementation of the AccelGyroSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: accelgyrosettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef ACCELGYROSETTINGS_H
#define ACCELGYROSETTINGS_H

/* Object constants */
#define ACCELGYROSETTINGS_OBJID 0x1262B2D0
#define ACCELGYROSETTINGS_ISSINGLEINST 1
#define ACCELGYROSETTINGS_ISSETTINGS 1
#define ACCELGYROSETTINGS_ISPRIORITY 0
#define ACCELGYROSETTINGS_NUMBYTES sizeof(AccelGyroSettingsData)

/* Generic interface functions */
int32_t AccelGyroSettingsInitialize();
UAVObjHandle AccelGyroSettingsHandle();
void AccelGyroSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

typedef struct __attribute__ ((__packed__)) {
    float X;
    float Y;
    float Z;
}  AccelGyroSettingsaccel_biasData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  AccelGyroSettingsaccel_biasDataArray ;
#define AccelGyroSettingsaccel_biasToArray( var ) UAVObjectFieldToArray( AccelGyroSettingsaccel_biasData, var )

typedef struct __attribute__ ((__packed__)) {
    float X;
    float Y;
    float Z;
}  AccelGyroSettingsaccel_scaleData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  AccelGyroSettingsaccel_scaleDataArray ;
#define AccelGyroSettingsaccel_scaleToArray( var ) UAVObjectFieldToArray( AccelGyroSettingsaccel_scaleData, var )

typedef struct __attribute__ ((__packed__)) {
    float X;
    float Y;
    float Z;
}  AccelGyroSettingsaccel_temp_coeffData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  AccelGyroSettingsaccel_temp_coeffDataArray ;
#define AccelGyroSettingsaccel_temp_coeffToArray( var ) UAVObjectFieldToArray( AccelGyroSettingsaccel_temp_coeffData, var )

typedef struct __attribute__ ((__packed__)) {
    float X;
    float Y;
    float Z;
}  AccelGyroSettingsgyro_biasData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  AccelGyroSettingsgyro_biasDataArray ;
#define AccelGyroSettingsgyro_biasToArray( var ) UAVObjectFieldToArray( AccelGyroSettingsgyro_biasData, var )

typedef struct __attribute__ ((__packed__)) {
    float X;
    float Y;
    float Z;
}  AccelGyroSettingsgyro_scaleData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  AccelGyroSettingsgyro_scaleDataArray ;
#define AccelGyroSettingsgyro_scaleToArray( var ) UAVObjectFieldToArray( AccelGyroSettingsgyro_scaleData, var )

typedef struct __attribute__ ((__packed__)) {
    float X;
    float X2;
    float Y;
    float Y2;
    float Z;
    float Z2;
}  AccelGyroSettingsgyro_temp_coeffData ;
typedef struct __attribute__ ((__packed__)) {
    float array[6];
}  AccelGyroSettingsgyro_temp_coeffDataArray ;
#define AccelGyroSettingsgyro_temp_coeffToArray( var ) UAVObjectFieldToArray( AccelGyroSettingsgyro_temp_coeffData, var )

typedef struct __attribute__ ((__packed__)) {
    float min;
    float max;
}  AccelGyroSettingstemp_calibrated_extentData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  AccelGyroSettingstemp_calibrated_extentDataArray ;
#define AccelGyroSettingstemp_calibrated_extentToArray( var ) UAVObjectFieldToArray( AccelGyroSettingstemp_calibrated_extentData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    AccelGyroSettingsaccel_biasData accel_bias;
    AccelGyroSettingsaccel_scaleData accel_scale;
    AccelGyroSettingsaccel_temp_coeffData accel_temp_coeff;
    AccelGyroSettingsgyro_biasData gyro_bias;
    AccelGyroSettingsgyro_scaleData gyro_scale;
    AccelGyroSettingsgyro_temp_coeffData gyro_temp_coeff;
    AccelGyroSettingstemp_calibrated_extentData temp_calibrated_extent;
} __attribute__((packed)) AccelGyroSettingsDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes so as to avoid the potential for CPU usage faults
 * on Cortex M4F during load/store of float UAVO fields
 */
typedef AccelGyroSettingsDataPacked __attribute__((aligned(4))) AccelGyroSettingsData;
    
/* Typesafe Object access functions */
static inline int32_t AccelGyroSettingsGet(AccelGyroSettingsData *dataOut) { return UAVObjGetData(AccelGyroSettingsHandle(), dataOut); }
static inline int32_t AccelGyroSettingsSet(const AccelGyroSettingsData *dataIn) { return UAVObjSetData(AccelGyroSettingsHandle(), dataIn); }
static inline int32_t AccelGyroSettingsInstGet(uint16_t instId, AccelGyroSettingsData *dataOut) { return UAVObjGetInstanceData(AccelGyroSettingsHandle(), instId, dataOut); }
static inline int32_t AccelGyroSettingsInstSet(uint16_t instId, const AccelGyroSettingsData *dataIn) { return UAVObjSetInstanceData(AccelGyroSettingsHandle(), instId, dataIn); }
static inline int32_t AccelGyroSettingsConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(AccelGyroSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }
static inline int32_t AccelGyroSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(AccelGyroSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }
static inline uint16_t AccelGyroSettingsCreateInstance() { return UAVObjCreateInstance(AccelGyroSettingsHandle(), &AccelGyroSettingsSetDefaults); }
static inline void AccelGyroSettingsRequestUpdate() { UAVObjRequestUpdate(AccelGyroSettingsHandle()); }
static inline void AccelGyroSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(AccelGyroSettingsHandle(), instId); }
static inline void AccelGyroSettingsUpdated() { UAVObjUpdated(AccelGyroSettingsHandle()); }
static inline void AccelGyroSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(AccelGyroSettingsHandle(), instId); }
static inline void AccelGyroSettingsLogging() { UAVObjLogging(AccelGyroSettingsHandle()); }
static inline void AccelGyroSettingsInstLogging(uint16_t instId) { UAVObjInstanceLogging(AccelGyroSettingsHandle(), instId); }
static inline int32_t AccelGyroSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(AccelGyroSettingsHandle(), dataOut); }
static inline int32_t AccelGyroSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(AccelGyroSettingsHandle(), dataIn); }
static inline int8_t AccelGyroSettingsReadOnly() { return UAVObjReadOnly(AccelGyroSettingsHandle()); }

/* Field accel_bias information */

// Array element names for field accel_bias
typedef enum {
    ACCELGYROSETTINGS_ACCEL_BIAS_X=0,
    ACCELGYROSETTINGS_ACCEL_BIAS_Y=1,
    ACCELGYROSETTINGS_ACCEL_BIAS_Z=2
} AccelGyroSettingsaccel_biasElem;

// Number of elements for field accel_bias
#define ACCELGYROSETTINGS_ACCEL_BIAS_NUMELEM 3

/* Field accel_scale information */

// Array element names for field accel_scale
typedef enum {
    ACCELGYROSETTINGS_ACCEL_SCALE_X=0,
    ACCELGYROSETTINGS_ACCEL_SCALE_Y=1,
    ACCELGYROSETTINGS_ACCEL_SCALE_Z=2
} AccelGyroSettingsaccel_scaleElem;

// Number of elements for field accel_scale
#define ACCELGYROSETTINGS_ACCEL_SCALE_NUMELEM 3

/* Field accel_temp_coeff information */

// Array element names for field accel_temp_coeff
typedef enum {
    ACCELGYROSETTINGS_ACCEL_TEMP_COEFF_X=0,
    ACCELGYROSETTINGS_ACCEL_TEMP_COEFF_Y=1,
    ACCELGYROSETTINGS_ACCEL_TEMP_COEFF_Z=2
} AccelGyroSettingsaccel_temp_coeffElem;

// Number of elements for field accel_temp_coeff
#define ACCELGYROSETTINGS_ACCEL_TEMP_COEFF_NUMELEM 3

/* Field gyro_bias information */

// Array element names for field gyro_bias
typedef enum {
    ACCELGYROSETTINGS_GYRO_BIAS_X=0,
    ACCELGYROSETTINGS_GYRO_BIAS_Y=1,
    ACCELGYROSETTINGS_GYRO_BIAS_Z=2
} AccelGyroSettingsgyro_biasElem;

// Number of elements for field gyro_bias
#define ACCELGYROSETTINGS_GYRO_BIAS_NUMELEM 3

/* Field gyro_scale information */

// Array element names for field gyro_scale
typedef enum {
    ACCELGYROSETTINGS_GYRO_SCALE_X=0,
    ACCELGYROSETTINGS_GYRO_SCALE_Y=1,
    ACCELGYROSETTINGS_GYRO_SCALE_Z=2
} AccelGyroSettingsgyro_scaleElem;

// Number of elements for field gyro_scale
#define ACCELGYROSETTINGS_GYRO_SCALE_NUMELEM 3

/* Field gyro_temp_coeff information */

// Array element names for field gyro_temp_coeff
typedef enum {
    ACCELGYROSETTINGS_GYRO_TEMP_COEFF_X=0,
    ACCELGYROSETTINGS_GYRO_TEMP_COEFF_X2=1,
    ACCELGYROSETTINGS_GYRO_TEMP_COEFF_Y=2,
    ACCELGYROSETTINGS_GYRO_TEMP_COEFF_Y2=3,
    ACCELGYROSETTINGS_GYRO_TEMP_COEFF_Z=4,
    ACCELGYROSETTINGS_GYRO_TEMP_COEFF_Z2=5
} AccelGyroSettingsgyro_temp_coeffElem;

// Number of elements for field gyro_temp_coeff
#define ACCELGYROSETTINGS_GYRO_TEMP_COEFF_NUMELEM 6

/* Field temp_calibrated_extent information */

// Array element names for field temp_calibrated_extent
typedef enum {
    ACCELGYROSETTINGS_TEMP_CALIBRATED_EXTENT_MIN=0,
    ACCELGYROSETTINGS_TEMP_CALIBRATED_EXTENT_MAX=1
} AccelGyroSettingstemp_calibrated_extentElem;

// Number of elements for field temp_calibrated_extent
#define ACCELGYROSETTINGS_TEMP_CALIBRATED_EXTENT_NUMELEM 2



/* Set/Get functions */
extern void AccelGyroSettingsaccel_biasSet(AccelGyroSettingsaccel_biasData *Newaccel_bias);
extern void AccelGyroSettingsaccel_biasGet(AccelGyroSettingsaccel_biasData *Newaccel_bias);
extern void AccelGyroSettingsaccel_biasArraySet(float *Newaccel_bias);
extern void AccelGyroSettingsaccel_biasArrayGet(float *Newaccel_bias);
extern void AccelGyroSettingsaccel_scaleSet(AccelGyroSettingsaccel_scaleData *Newaccel_scale);
extern void AccelGyroSettingsaccel_scaleGet(AccelGyroSettingsaccel_scaleData *Newaccel_scale);
extern void AccelGyroSettingsaccel_scaleArraySet(float *Newaccel_scale);
extern void AccelGyroSettingsaccel_scaleArrayGet(float *Newaccel_scale);
extern void AccelGyroSettingsaccel_temp_coeffSet(AccelGyroSettingsaccel_temp_coeffData *Newaccel_temp_coeff);
extern void AccelGyroSettingsaccel_temp_coeffGet(AccelGyroSettingsaccel_temp_coeffData *Newaccel_temp_coeff);
extern void AccelGyroSettingsaccel_temp_coeffArraySet(float *Newaccel_temp_coeff);
extern void AccelGyroSettingsaccel_temp_coeffArrayGet(float *Newaccel_temp_coeff);
extern void AccelGyroSettingsgyro_biasSet(AccelGyroSettingsgyro_biasData *Newgyro_bias);
extern void AccelGyroSettingsgyro_biasGet(AccelGyroSettingsgyro_biasData *Newgyro_bias);
extern void AccelGyroSettingsgyro_biasArraySet(float *Newgyro_bias);
extern void AccelGyroSettingsgyro_biasArrayGet(float *Newgyro_bias);
extern void AccelGyroSettingsgyro_scaleSet(AccelGyroSettingsgyro_scaleData *Newgyro_scale);
extern void AccelGyroSettingsgyro_scaleGet(AccelGyroSettingsgyro_scaleData *Newgyro_scale);
extern void AccelGyroSettingsgyro_scaleArraySet(float *Newgyro_scale);
extern void AccelGyroSettingsgyro_scaleArrayGet(float *Newgyro_scale);
extern void AccelGyroSettingsgyro_temp_coeffSet(AccelGyroSettingsgyro_temp_coeffData *Newgyro_temp_coeff);
extern void AccelGyroSettingsgyro_temp_coeffGet(AccelGyroSettingsgyro_temp_coeffData *Newgyro_temp_coeff);
extern void AccelGyroSettingsgyro_temp_coeffArraySet(float *Newgyro_temp_coeff);
extern void AccelGyroSettingsgyro_temp_coeffArrayGet(float *Newgyro_temp_coeff);
extern void AccelGyroSettingstemp_calibrated_extentSet(AccelGyroSettingstemp_calibrated_extentData *Newtemp_calibrated_extent);
extern void AccelGyroSettingstemp_calibrated_extentGet(AccelGyroSettingstemp_calibrated_extentData *Newtemp_calibrated_extent);
extern void AccelGyroSettingstemp_calibrated_extentArraySet(float *Newtemp_calibrated_extent);
extern void AccelGyroSettingstemp_calibrated_extentArrayGet(float *Newtemp_calibrated_extent);


#endif // ACCELGYROSETTINGS_H

/**
 * @}
 * @}
 */
