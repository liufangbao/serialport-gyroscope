/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup StabilizationSettingsBank2 StabilizationSettingsBank2 
 * @brief Currently selected PID bank
 *
 * Autogenerated files and functions for StabilizationSettingsBank2 Object
 *
 * @{ 
 *
 * @file       stabilizationsettingsbank2.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 * @brief      Implementation of the StabilizationSettingsBank2 object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: stabilizationsettingsbank2.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef STABILIZATIONSETTINGSBANK2_H
#define STABILIZATIONSETTINGSBANK2_H

/* Object constants */
#define STABILIZATIONSETTINGSBANK2_OBJID 0x70E9539A
#define STABILIZATIONSETTINGSBANK2_ISSINGLEINST 1
#define STABILIZATIONSETTINGSBANK2_ISSETTINGS 1
#define STABILIZATIONSETTINGSBANK2_ISPRIORITY 0
#define STABILIZATIONSETTINGSBANK2_NUMBYTES sizeof(StabilizationSettingsBank2Data)

/* Generic interface functions */
int32_t StabilizationSettingsBank2Initialize();
UAVObjHandle StabilizationSettingsBank2Handle();
void StabilizationSettingsBank2SetDefaults(UAVObjHandle obj, uint16_t instId);

typedef struct __attribute__ ((__packed__)) {
    float Roll;
    float Pitch;
    float Yaw;
}  StabilizationSettingsBank2ManualRateData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  StabilizationSettingsBank2ManualRateDataArray ;
#define StabilizationSettingsBank2ManualRateToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2ManualRateData, var )

typedef struct __attribute__ ((__packed__)) {
    float Roll;
    float Pitch;
    float Yaw;
}  StabilizationSettingsBank2MaximumRateData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  StabilizationSettingsBank2MaximumRateDataArray ;
#define StabilizationSettingsBank2MaximumRateToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2MaximumRateData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
    float Kd;
    float ILimit;
}  StabilizationSettingsBank2RollRatePIDData ;
typedef struct __attribute__ ((__packed__)) {
    float array[4];
}  StabilizationSettingsBank2RollRatePIDDataArray ;
#define StabilizationSettingsBank2RollRatePIDToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2RollRatePIDData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
    float Kd;
    float ILimit;
}  StabilizationSettingsBank2PitchRatePIDData ;
typedef struct __attribute__ ((__packed__)) {
    float array[4];
}  StabilizationSettingsBank2PitchRatePIDDataArray ;
#define StabilizationSettingsBank2PitchRatePIDToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2PitchRatePIDData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
    float Kd;
    float ILimit;
}  StabilizationSettingsBank2YawRatePIDData ;
typedef struct __attribute__ ((__packed__)) {
    float array[4];
}  StabilizationSettingsBank2YawRatePIDDataArray ;
#define StabilizationSettingsBank2YawRatePIDToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2YawRatePIDData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
    float ILimit;
}  StabilizationSettingsBank2RollPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  StabilizationSettingsBank2RollPIDataArray ;
#define StabilizationSettingsBank2RollPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2RollPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
    float ILimit;
}  StabilizationSettingsBank2PitchPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  StabilizationSettingsBank2PitchPIDataArray ;
#define StabilizationSettingsBank2PitchPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2PitchPIData, var )

typedef struct __attribute__ ((__packed__)) {
    float Kp;
    float Ki;
    float ILimit;
}  StabilizationSettingsBank2YawPIData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  StabilizationSettingsBank2YawPIDataArray ;
#define StabilizationSettingsBank2YawPIToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2YawPIData, var )

typedef struct __attribute__ ((__packed__)) {
    int8_t Roll;
    int8_t Pitch;
    int8_t Yaw;
}  StabilizationSettingsBank2StickExpoData ;
typedef struct __attribute__ ((__packed__)) {
    int8_t array[3];
}  StabilizationSettingsBank2StickExpoDataArray ;
#define StabilizationSettingsBank2StickExpoToArray( var ) UAVObjectFieldToArray( StabilizationSettingsBank2StickExpoData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    StabilizationSettingsBank2ManualRateData ManualRate;
    StabilizationSettingsBank2MaximumRateData MaximumRate;
    StabilizationSettingsBank2RollRatePIDData RollRatePID;
    StabilizationSettingsBank2PitchRatePIDData PitchRatePID;
    StabilizationSettingsBank2YawRatePIDData YawRatePID;
    StabilizationSettingsBank2RollPIData RollPI;
    StabilizationSettingsBank2PitchPIData PitchPI;
    StabilizationSettingsBank2YawPIData YawPI;
    float AcroInsanityFactor;
    float ThrustPIDScaleCurve[5];
    uint8_t RollMax;
    uint8_t PitchMax;
    uint8_t YawMax;
    StabilizationSettingsBank2StickExpoData StickExpo;
    uint8_t EnablePiroComp;
    uint8_t EnableThrustPIDScaling;
    uint8_t ThrustPIDScaleSource;
    uint8_t ThrustPIDScaleTarget;
    uint8_t ThrustPIDScaleAxes;
} __attribute__((packed)) StabilizationSettingsBank2DataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes so as to avoid the potential for CPU usage faults
 * on Cortex M4F during load/store of float UAVO fields
 */
typedef StabilizationSettingsBank2DataPacked __attribute__((aligned(4))) StabilizationSettingsBank2Data;
    
/* Typesafe Object access functions */
static inline int32_t StabilizationSettingsBank2Get(StabilizationSettingsBank2Data *dataOut) { return UAVObjGetData(StabilizationSettingsBank2Handle(), dataOut); }
static inline int32_t StabilizationSettingsBank2Set(const StabilizationSettingsBank2Data *dataIn) { return UAVObjSetData(StabilizationSettingsBank2Handle(), dataIn); }
static inline int32_t StabilizationSettingsBank2InstGet(uint16_t instId, StabilizationSettingsBank2Data *dataOut) { return UAVObjGetInstanceData(StabilizationSettingsBank2Handle(), instId, dataOut); }
static inline int32_t StabilizationSettingsBank2InstSet(uint16_t instId, const StabilizationSettingsBank2Data *dataIn) { return UAVObjSetInstanceData(StabilizationSettingsBank2Handle(), instId, dataIn); }
static inline int32_t StabilizationSettingsBank2ConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(StabilizationSettingsBank2Handle(), queue, EV_MASK_ALL_UPDATES); }
static inline int32_t StabilizationSettingsBank2ConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(StabilizationSettingsBank2Handle(), cb, EV_MASK_ALL_UPDATES); }
static inline uint16_t StabilizationSettingsBank2CreateInstance() { return UAVObjCreateInstance(StabilizationSettingsBank2Handle(), &StabilizationSettingsBank2SetDefaults); }
static inline void StabilizationSettingsBank2RequestUpdate() { UAVObjRequestUpdate(StabilizationSettingsBank2Handle()); }
static inline void StabilizationSettingsBank2RequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(StabilizationSettingsBank2Handle(), instId); }
static inline void StabilizationSettingsBank2Updated() { UAVObjUpdated(StabilizationSettingsBank2Handle()); }
static inline void StabilizationSettingsBank2InstUpdated(uint16_t instId) { UAVObjInstanceUpdated(StabilizationSettingsBank2Handle(), instId); }
static inline void StabilizationSettingsBank2Logging() { UAVObjLogging(StabilizationSettingsBank2Handle()); }
static inline void StabilizationSettingsBank2InstLogging(uint16_t instId) { UAVObjInstanceLogging(StabilizationSettingsBank2Handle(), instId); }
static inline int32_t StabilizationSettingsBank2GetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(StabilizationSettingsBank2Handle(), dataOut); }
static inline int32_t StabilizationSettingsBank2SetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(StabilizationSettingsBank2Handle(), dataIn); }
static inline int8_t StabilizationSettingsBank2ReadOnly() { return UAVObjReadOnly(StabilizationSettingsBank2Handle()); }

/* Field ManualRate information */

// Array element names for field ManualRate
typedef enum {
    STABILIZATIONSETTINGSBANK2_MANUALRATE_ROLL=0,
    STABILIZATIONSETTINGSBANK2_MANUALRATE_PITCH=1,
    STABILIZATIONSETTINGSBANK2_MANUALRATE_YAW=2
} StabilizationSettingsBank2ManualRateElem;

// Number of elements for field ManualRate
#define STABILIZATIONSETTINGSBANK2_MANUALRATE_NUMELEM 3

/* Field MaximumRate information */

// Array element names for field MaximumRate
typedef enum {
    STABILIZATIONSETTINGSBANK2_MAXIMUMRATE_ROLL=0,
    STABILIZATIONSETTINGSBANK2_MAXIMUMRATE_PITCH=1,
    STABILIZATIONSETTINGSBANK2_MAXIMUMRATE_YAW=2
} StabilizationSettingsBank2MaximumRateElem;

// Number of elements for field MaximumRate
#define STABILIZATIONSETTINGSBANK2_MAXIMUMRATE_NUMELEM 3

/* Field RollRatePID information */

// Array element names for field RollRatePID
typedef enum {
    STABILIZATIONSETTINGSBANK2_ROLLRATEPID_KP=0,
    STABILIZATIONSETTINGSBANK2_ROLLRATEPID_KI=1,
    STABILIZATIONSETTINGSBANK2_ROLLRATEPID_KD=2,
    STABILIZATIONSETTINGSBANK2_ROLLRATEPID_ILIMIT=3
} StabilizationSettingsBank2RollRatePIDElem;

// Number of elements for field RollRatePID
#define STABILIZATIONSETTINGSBANK2_ROLLRATEPID_NUMELEM 4

/* Field PitchRatePID information */

// Array element names for field PitchRatePID
typedef enum {
    STABILIZATIONSETTINGSBANK2_PITCHRATEPID_KP=0,
    STABILIZATIONSETTINGSBANK2_PITCHRATEPID_KI=1,
    STABILIZATIONSETTINGSBANK2_PITCHRATEPID_KD=2,
    STABILIZATIONSETTINGSBANK2_PITCHRATEPID_ILIMIT=3
} StabilizationSettingsBank2PitchRatePIDElem;

// Number of elements for field PitchRatePID
#define STABILIZATIONSETTINGSBANK2_PITCHRATEPID_NUMELEM 4

/* Field YawRatePID information */

// Array element names for field YawRatePID
typedef enum {
    STABILIZATIONSETTINGSBANK2_YAWRATEPID_KP=0,
    STABILIZATIONSETTINGSBANK2_YAWRATEPID_KI=1,
    STABILIZATIONSETTINGSBANK2_YAWRATEPID_KD=2,
    STABILIZATIONSETTINGSBANK2_YAWRATEPID_ILIMIT=3
} StabilizationSettingsBank2YawRatePIDElem;

// Number of elements for field YawRatePID
#define STABILIZATIONSETTINGSBANK2_YAWRATEPID_NUMELEM 4

/* Field RollPI information */

// Array element names for field RollPI
typedef enum {
    STABILIZATIONSETTINGSBANK2_ROLLPI_KP=0,
    STABILIZATIONSETTINGSBANK2_ROLLPI_KI=1,
    STABILIZATIONSETTINGSBANK2_ROLLPI_ILIMIT=2
} StabilizationSettingsBank2RollPIElem;

// Number of elements for field RollPI
#define STABILIZATIONSETTINGSBANK2_ROLLPI_NUMELEM 3

/* Field PitchPI information */

// Array element names for field PitchPI
typedef enum {
    STABILIZATIONSETTINGSBANK2_PITCHPI_KP=0,
    STABILIZATIONSETTINGSBANK2_PITCHPI_KI=1,
    STABILIZATIONSETTINGSBANK2_PITCHPI_ILIMIT=2
} StabilizationSettingsBank2PitchPIElem;

// Number of elements for field PitchPI
#define STABILIZATIONSETTINGSBANK2_PITCHPI_NUMELEM 3

/* Field YawPI information */

// Array element names for field YawPI
typedef enum {
    STABILIZATIONSETTINGSBANK2_YAWPI_KP=0,
    STABILIZATIONSETTINGSBANK2_YAWPI_KI=1,
    STABILIZATIONSETTINGSBANK2_YAWPI_ILIMIT=2
} StabilizationSettingsBank2YawPIElem;

// Number of elements for field YawPI
#define STABILIZATIONSETTINGSBANK2_YAWPI_NUMELEM 3

/* Field AcroInsanityFactor information */

/* Field ThrustPIDScaleCurve information */

// Array element names for field ThrustPIDScaleCurve
typedef enum {
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALECURVE_0=0,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALECURVE_25=1,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALECURVE_50=2,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALECURVE_75=3,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALECURVE_100=4
} StabilizationSettingsBank2ThrustPIDScaleCurveElem;

// Number of elements for field ThrustPIDScaleCurve
#define STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALECURVE_NUMELEM 5

/* Field RollMax information */

/* Field PitchMax information */

/* Field YawMax information */

/* Field StickExpo information */

// Array element names for field StickExpo
typedef enum {
    STABILIZATIONSETTINGSBANK2_STICKEXPO_ROLL=0,
    STABILIZATIONSETTINGSBANK2_STICKEXPO_PITCH=1,
    STABILIZATIONSETTINGSBANK2_STICKEXPO_YAW=2
} StabilizationSettingsBank2StickExpoElem;

// Number of elements for field StickExpo
#define STABILIZATIONSETTINGSBANK2_STICKEXPO_NUMELEM 3

/* Field EnablePiroComp information */

// Enumeration options for field EnablePiroComp
typedef enum {
    STABILIZATIONSETTINGSBANK2_ENABLEPIROCOMP_FALSE=0,
    STABILIZATIONSETTINGSBANK2_ENABLEPIROCOMP_TRUE=1
} StabilizationSettingsBank2EnablePiroCompOptions;

/* Field EnableThrustPIDScaling information */

// Enumeration options for field EnableThrustPIDScaling
typedef enum {
    STABILIZATIONSETTINGSBANK2_ENABLETHRUSTPIDSCALING_FALSE=0,
    STABILIZATIONSETTINGSBANK2_ENABLETHRUSTPIDSCALING_TRUE=1
} StabilizationSettingsBank2EnableThrustPIDScalingOptions;

/* Field ThrustPIDScaleSource information */

// Enumeration options for field ThrustPIDScaleSource
typedef enum {
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALESOURCE_MANUALCONTROLTHROTTLE=0,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALESOURCE_STABILIZATIONDESIREDTHRUST=1,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALESOURCE_ACTUATORDESIREDTHRUST=2
} StabilizationSettingsBank2ThrustPIDScaleSourceOptions;

/* Field ThrustPIDScaleTarget information */

// Enumeration options for field ThrustPIDScaleTarget
typedef enum {
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALETARGET_PID=0,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALETARGET_PI=1,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALETARGET_PD=2,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALETARGET_ID=3,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALETARGET_P=4,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALETARGET_I=5,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALETARGET_D=6
} StabilizationSettingsBank2ThrustPIDScaleTargetOptions;

/* Field ThrustPIDScaleAxes information */

// Enumeration options for field ThrustPIDScaleAxes
typedef enum {
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALEAXES_ROLLPITCHYAW=0,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALEAXES_ROLLPITCH=1,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALEAXES_ROLLYAW=2,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALEAXES_ROLL=3,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALEAXES_PITCHYAW=4,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALEAXES_PITCH=5,
    STABILIZATIONSETTINGSBANK2_THRUSTPIDSCALEAXES_YAW=6
} StabilizationSettingsBank2ThrustPIDScaleAxesOptions;



/* Set/Get functions */
extern void StabilizationSettingsBank2ManualRateSet(StabilizationSettingsBank2ManualRateData *NewManualRate);
extern void StabilizationSettingsBank2ManualRateGet(StabilizationSettingsBank2ManualRateData *NewManualRate);
extern void StabilizationSettingsBank2ManualRateArraySet(float *NewManualRate);
extern void StabilizationSettingsBank2ManualRateArrayGet(float *NewManualRate);
extern void StabilizationSettingsBank2MaximumRateSet(StabilizationSettingsBank2MaximumRateData *NewMaximumRate);
extern void StabilizationSettingsBank2MaximumRateGet(StabilizationSettingsBank2MaximumRateData *NewMaximumRate);
extern void StabilizationSettingsBank2MaximumRateArraySet(float *NewMaximumRate);
extern void StabilizationSettingsBank2MaximumRateArrayGet(float *NewMaximumRate);
extern void StabilizationSettingsBank2RollRatePIDSet(StabilizationSettingsBank2RollRatePIDData *NewRollRatePID);
extern void StabilizationSettingsBank2RollRatePIDGet(StabilizationSettingsBank2RollRatePIDData *NewRollRatePID);
extern void StabilizationSettingsBank2RollRatePIDArraySet(float *NewRollRatePID);
extern void StabilizationSettingsBank2RollRatePIDArrayGet(float *NewRollRatePID);
extern void StabilizationSettingsBank2PitchRatePIDSet(StabilizationSettingsBank2PitchRatePIDData *NewPitchRatePID);
extern void StabilizationSettingsBank2PitchRatePIDGet(StabilizationSettingsBank2PitchRatePIDData *NewPitchRatePID);
extern void StabilizationSettingsBank2PitchRatePIDArraySet(float *NewPitchRatePID);
extern void StabilizationSettingsBank2PitchRatePIDArrayGet(float *NewPitchRatePID);
extern void StabilizationSettingsBank2YawRatePIDSet(StabilizationSettingsBank2YawRatePIDData *NewYawRatePID);
extern void StabilizationSettingsBank2YawRatePIDGet(StabilizationSettingsBank2YawRatePIDData *NewYawRatePID);
extern void StabilizationSettingsBank2YawRatePIDArraySet(float *NewYawRatePID);
extern void StabilizationSettingsBank2YawRatePIDArrayGet(float *NewYawRatePID);
extern void StabilizationSettingsBank2RollPISet(StabilizationSettingsBank2RollPIData *NewRollPI);
extern void StabilizationSettingsBank2RollPIGet(StabilizationSettingsBank2RollPIData *NewRollPI);
extern void StabilizationSettingsBank2RollPIArraySet(float *NewRollPI);
extern void StabilizationSettingsBank2RollPIArrayGet(float *NewRollPI);
extern void StabilizationSettingsBank2PitchPISet(StabilizationSettingsBank2PitchPIData *NewPitchPI);
extern void StabilizationSettingsBank2PitchPIGet(StabilizationSettingsBank2PitchPIData *NewPitchPI);
extern void StabilizationSettingsBank2PitchPIArraySet(float *NewPitchPI);
extern void StabilizationSettingsBank2PitchPIArrayGet(float *NewPitchPI);
extern void StabilizationSettingsBank2YawPISet(StabilizationSettingsBank2YawPIData *NewYawPI);
extern void StabilizationSettingsBank2YawPIGet(StabilizationSettingsBank2YawPIData *NewYawPI);
extern void StabilizationSettingsBank2YawPIArraySet(float *NewYawPI);
extern void StabilizationSettingsBank2YawPIArrayGet(float *NewYawPI);
extern void StabilizationSettingsBank2AcroInsanityFactorSet(float *NewAcroInsanityFactor);
extern void StabilizationSettingsBank2AcroInsanityFactorGet(float *NewAcroInsanityFactor);
extern void StabilizationSettingsBank2ThrustPIDScaleCurveSet(float *NewThrustPIDScaleCurve);
extern void StabilizationSettingsBank2ThrustPIDScaleCurveGet(float *NewThrustPIDScaleCurve);
extern void StabilizationSettingsBank2RollMaxSet(uint8_t *NewRollMax);
extern void StabilizationSettingsBank2RollMaxGet(uint8_t *NewRollMax);
extern void StabilizationSettingsBank2PitchMaxSet(uint8_t *NewPitchMax);
extern void StabilizationSettingsBank2PitchMaxGet(uint8_t *NewPitchMax);
extern void StabilizationSettingsBank2YawMaxSet(uint8_t *NewYawMax);
extern void StabilizationSettingsBank2YawMaxGet(uint8_t *NewYawMax);
extern void StabilizationSettingsBank2StickExpoSet(StabilizationSettingsBank2StickExpoData *NewStickExpo);
extern void StabilizationSettingsBank2StickExpoGet(StabilizationSettingsBank2StickExpoData *NewStickExpo);
extern void StabilizationSettingsBank2StickExpoArraySet(int8_t *NewStickExpo);
extern void StabilizationSettingsBank2StickExpoArrayGet(int8_t *NewStickExpo);
extern void StabilizationSettingsBank2EnablePiroCompSet(uint8_t *NewEnablePiroComp);
extern void StabilizationSettingsBank2EnablePiroCompGet(uint8_t *NewEnablePiroComp);
extern void StabilizationSettingsBank2EnableThrustPIDScalingSet(uint8_t *NewEnableThrustPIDScaling);
extern void StabilizationSettingsBank2EnableThrustPIDScalingGet(uint8_t *NewEnableThrustPIDScaling);
extern void StabilizationSettingsBank2ThrustPIDScaleSourceSet(uint8_t *NewThrustPIDScaleSource);
extern void StabilizationSettingsBank2ThrustPIDScaleSourceGet(uint8_t *NewThrustPIDScaleSource);
extern void StabilizationSettingsBank2ThrustPIDScaleTargetSet(uint8_t *NewThrustPIDScaleTarget);
extern void StabilizationSettingsBank2ThrustPIDScaleTargetGet(uint8_t *NewThrustPIDScaleTarget);
extern void StabilizationSettingsBank2ThrustPIDScaleAxesSet(uint8_t *NewThrustPIDScaleAxes);
extern void StabilizationSettingsBank2ThrustPIDScaleAxesGet(uint8_t *NewThrustPIDScaleAxes);


#endif // STABILIZATIONSETTINGSBANK2_H

/**
 * @}
 * @}
 */
