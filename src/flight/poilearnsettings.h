/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup PoiLearnSettings PoiLearnSettings 
 * @brief Settings for the @ref Point of Interest feature
 *
 * Autogenerated files and functions for PoiLearnSettings Object
 *
 * @{ 
 *
 * @file       poilearnsettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 * @brief      Implementation of the PoiLearnSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: poilearnsettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef POILEARNSETTINGS_H
#define POILEARNSETTINGS_H

/* Object constants */
#define POILEARNSETTINGS_OBJID 0x9E22E820
#define POILEARNSETTINGS_ISSINGLEINST 1
#define POILEARNSETTINGS_ISSETTINGS 1
#define POILEARNSETTINGS_ISPRIORITY 0
#define POILEARNSETTINGS_NUMBYTES sizeof(PoiLearnSettingsData)

/* Generic interface functions */
int32_t PoiLearnSettingsInitialize();
UAVObjHandle PoiLearnSettingsHandle();
void PoiLearnSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
    uint8_t Input;
} __attribute__((packed)) PoiLearnSettingsDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes so as to avoid the potential for CPU usage faults
 * on Cortex M4F during load/store of float UAVO fields
 */
typedef PoiLearnSettingsDataPacked __attribute__((aligned(4))) PoiLearnSettingsData;
    
/* Typesafe Object access functions */
static inline int32_t PoiLearnSettingsGet(PoiLearnSettingsData *dataOut) { return UAVObjGetData(PoiLearnSettingsHandle(), dataOut); }
static inline int32_t PoiLearnSettingsSet(const PoiLearnSettingsData *dataIn) { return UAVObjSetData(PoiLearnSettingsHandle(), dataIn); }
static inline int32_t PoiLearnSettingsInstGet(uint16_t instId, PoiLearnSettingsData *dataOut) { return UAVObjGetInstanceData(PoiLearnSettingsHandle(), instId, dataOut); }
static inline int32_t PoiLearnSettingsInstSet(uint16_t instId, const PoiLearnSettingsData *dataIn) { return UAVObjSetInstanceData(PoiLearnSettingsHandle(), instId, dataIn); }
static inline int32_t PoiLearnSettingsConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(PoiLearnSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }
static inline int32_t PoiLearnSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(PoiLearnSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }
static inline uint16_t PoiLearnSettingsCreateInstance() { return UAVObjCreateInstance(PoiLearnSettingsHandle(), &PoiLearnSettingsSetDefaults); }
static inline void PoiLearnSettingsRequestUpdate() { UAVObjRequestUpdate(PoiLearnSettingsHandle()); }
static inline void PoiLearnSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(PoiLearnSettingsHandle(), instId); }
static inline void PoiLearnSettingsUpdated() { UAVObjUpdated(PoiLearnSettingsHandle()); }
static inline void PoiLearnSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(PoiLearnSettingsHandle(), instId); }
static inline void PoiLearnSettingsLogging() { UAVObjLogging(PoiLearnSettingsHandle()); }
static inline void PoiLearnSettingsInstLogging(uint16_t instId) { UAVObjInstanceLogging(PoiLearnSettingsHandle(), instId); }
static inline int32_t PoiLearnSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(PoiLearnSettingsHandle(), dataOut); }
static inline int32_t PoiLearnSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(PoiLearnSettingsHandle(), dataIn); }
static inline int8_t PoiLearnSettingsReadOnly() { return UAVObjReadOnly(PoiLearnSettingsHandle()); }

/* Field Input information */

// Enumeration options for field Input
typedef enum {
    POILEARNSETTINGS_INPUT_ACCESSORY0=0,
    POILEARNSETTINGS_INPUT_ACCESSORY1=1,
    POILEARNSETTINGS_INPUT_ACCESSORY2=2,
    POILEARNSETTINGS_INPUT_ACCESSORY3=3,
    POILEARNSETTINGS_INPUT_ACCESSORY4=4,
    POILEARNSETTINGS_INPUT_ACCESSORY5=5,
    POILEARNSETTINGS_INPUT_NONE=6
} PoiLearnSettingsInputOptions;



/* Set/Get functions */
extern void PoiLearnSettingsInputSet(uint8_t *NewInput);
extern void PoiLearnSettingsInputGet(uint8_t *NewInput);


#endif // POILEARNSETTINGS_H

/**
 * @}
 * @}
 */
